#!/usr/bin/env bash
set -ex

if [ -z "$GOPATH" ]; then
  echo "GOPATH env is required"
  exit 1
fi

mappings=(
  "google/api/annotations.proto=github.com/gogo/googleapis/google/api"
  "google/api/http.proto=github.com/gogo/googleapis/google/api"
  "google/rpc/code.proto=github.com/gogo/googleapis/google/rpc"
  "google/rpc/error_details.proto=github.com/gogo/googleapis/google/rpc"
  "google/rpc/status.proto=github.com/gogo/googleapis/google/rpc"
  "google/protobuf/any.proto=github.com/gogo/protobuf/types"
  "google/protobuf/duration.proto=github.com/gogo/protobuf/types"
  "google/protobuf/empty.proto=github.com/gogo/protobuf/types"
  "google/protobuf/struct.proto=github.com/gogo/protobuf/types"
  "google/protobuf/timestamp.proto=github.com/gogo/protobuf/types"
  "google/protobuf/wrappers.proto=github.com/gogo/protobuf/types"
  "gogoproto/gogo.proto=github.com/gogo/protobuf/gogoproto"
)

for mapping in "${mappings[@]}"
do
  gogoarg+=",M$mapping"
done

protoc \
  -I protos \
  -I="vendor/github.com/gogo/protobuf" \
  -I="vendor/github.com/gogo/protobuf/protobuf" \
  -I="vendor/github.com/lyft/protoc-gen-validate" \
  --gofast_out="plugins=grpc${gogoarg}:." \
  --validate_out="lang=gogo:." \
  protos/v1/config.proto
